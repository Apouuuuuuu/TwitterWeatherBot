import getSortedWeather from "./utils/weather.js";
import { postTweet } from "./utils/twitter.js";

async function tweetWeather() {
  console.log("ğŸ”„ Fetching weather data...");

  // ğŸ“Œ RÃ©cupÃ©rer la mÃ©tÃ©o classÃ©e par population (ordre inchangÃ©)
  const weatherUpdate = await getSortedWeather();

  // ğŸ“Œ DÃ©couper en plusieurs tweets (8 villes max par tweet)
  const chunkSize = 8;
  const tweetChunks = [];
  for (let i = 0; i < weatherUpdate.length; i += chunkSize) {
    tweetChunks.push(weatherUpdate.slice(i, i + chunkSize));
  }

  let lastTweetId = null;

  // ğŸ“Œ Publier chaque tweet en rÃ©ponse au prÃ©cÃ©dent pour crÃ©er un thread
  for (let i = 0; i < tweetChunks.length; i++) {
    let tweetMessage = i === 0
      ? `ğŸ“Š TempÃ©ratures en France :\n\n`
      : `ğŸ“Š Suite des tempÃ©ratures :\n\n`;

    tweetChunks[i].forEach(line => {
      tweetMessage += `${line}\n`;
    });

    console.log(`ğŸ“¢ Posting tweet ${i + 1}...`);
    
    // ğŸ“Œ Envoyer le tweet en rÃ©ponse au prÃ©cÃ©dent si ce n'est pas le premier
    lastTweetId = await postTweet(tweetMessage, lastTweetId);
  }

  console.log("âœ… Full weather thread posted!");
}

// ğŸ“Œ ExÃ©cuter le bot
tweetWeather();
